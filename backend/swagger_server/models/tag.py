# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Tag(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, tag_id: int=None, community_id: int=None, post_id: int=None, name: str=None):  # noqa: E501
        """Tag - a model defined in Swagger

        :param tag_id: The tag_id of this Tag.  # noqa: E501
        :type tag_id: int
        :param community_id: The community_id of this Tag.  # noqa: E501
        :type community_id: int
        :param post_id: The post_id of this Tag.  # noqa: E501
        :type post_id: int
        :param name: The name of this Tag.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'tag_id': int,
            'community_id': int,
            'post_id': int,
            'name': str
        }

        self.attribute_map = {
            'tag_id': 'tagID',
            'community_id': 'communityID',
            'post_id': 'postID',
            'name': 'name'
        }
        self._tag_id = tag_id
        self._community_id = community_id
        self._post_id = post_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'Tag':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Tag of this Tag.  # noqa: E501
        :rtype: Tag
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tag_id(self) -> int:
        """Gets the tag_id of this Tag.


        :return: The tag_id of this Tag.
        :rtype: int
        """
        return self._tag_id

    @tag_id.setter
    def tag_id(self, tag_id: int):
        """Sets the tag_id of this Tag.


        :param tag_id: The tag_id of this Tag.
        :type tag_id: int
        """

        self._tag_id = tag_id

    @property
    def community_id(self) -> int:
        """Gets the community_id of this Tag.


        :return: The community_id of this Tag.
        :rtype: int
        """
        return self._community_id

    @community_id.setter
    def community_id(self, community_id: int):
        """Sets the community_id of this Tag.


        :param community_id: The community_id of this Tag.
        :type community_id: int
        """

        self._community_id = community_id

    @property
    def post_id(self) -> int:
        """Gets the post_id of this Tag.


        :return: The post_id of this Tag.
        :rtype: int
        """
        return self._post_id

    @post_id.setter
    def post_id(self, post_id: int):
        """Sets the post_id of this Tag.


        :param post_id: The post_id of this Tag.
        :type post_id: int
        """

        self._post_id = post_id

    @property
    def name(self) -> str:
        """Gets the name of this Tag.


        :return: The name of this Tag.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Tag.


        :param name: The name of this Tag.
        :type name: str
        """

        self._name = name
