# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Notifications(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, notification_id: int=None, content: str=None, user_id: int=None, post_id: int=None, community_id: int=None, comment_id: int=None, message_id: int=None):  # noqa: E501
        """Notifications - a model defined in Swagger

        :param notification_id: The notification_id of this Notifications.  # noqa: E501
        :type notification_id: int
        :param content: The content of this Notifications.  # noqa: E501
        :type content: str
        :param user_id: The user_id of this Notifications.  # noqa: E501
        :type user_id: int
        :param post_id: The post_id of this Notifications.  # noqa: E501
        :type post_id: int
        :param community_id: The community_id of this Notifications.  # noqa: E501
        :type community_id: int
        :param comment_id: The comment_id of this Notifications.  # noqa: E501
        :type comment_id: int
        :param message_id: The message_id of this Notifications.  # noqa: E501
        :type message_id: int
        """
        self.swagger_types = {
            'notification_id': int,
            'content': str,
            'user_id': int,
            'post_id': int,
            'community_id': int,
            'comment_id': int,
            'message_id': int
        }

        self.attribute_map = {
            'notification_id': 'notificationID',
            'content': 'content',
            'user_id': 'UserID',
            'post_id': 'postID',
            'community_id': 'communityID',
            'comment_id': 'commentID',
            'message_id': 'messageID'
        }
        self._notification_id = notification_id
        self._content = content
        self._user_id = user_id
        self._post_id = post_id
        self._community_id = community_id
        self._comment_id = comment_id
        self._message_id = message_id

    @classmethod
    def from_dict(cls, dikt) -> 'Notifications':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Notifications of this Notifications.  # noqa: E501
        :rtype: Notifications
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notification_id(self) -> int:
        """Gets the notification_id of this Notifications.


        :return: The notification_id of this Notifications.
        :rtype: int
        """
        return self._notification_id

    @notification_id.setter
    def notification_id(self, notification_id: int):
        """Sets the notification_id of this Notifications.


        :param notification_id: The notification_id of this Notifications.
        :type notification_id: int
        """

        self._notification_id = notification_id

    @property
    def content(self) -> str:
        """Gets the content of this Notifications.


        :return: The content of this Notifications.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this Notifications.


        :param content: The content of this Notifications.
        :type content: str
        """

        self._content = content

    @property
    def user_id(self) -> int:
        """Gets the user_id of this Notifications.


        :return: The user_id of this Notifications.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: int):
        """Sets the user_id of this Notifications.


        :param user_id: The user_id of this Notifications.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def post_id(self) -> int:
        """Gets the post_id of this Notifications.


        :return: The post_id of this Notifications.
        :rtype: int
        """
        return self._post_id

    @post_id.setter
    def post_id(self, post_id: int):
        """Sets the post_id of this Notifications.


        :param post_id: The post_id of this Notifications.
        :type post_id: int
        """

        self._post_id = post_id

    @property
    def community_id(self) -> int:
        """Gets the community_id of this Notifications.


        :return: The community_id of this Notifications.
        :rtype: int
        """
        return self._community_id

    @community_id.setter
    def community_id(self, community_id: int):
        """Sets the community_id of this Notifications.


        :param community_id: The community_id of this Notifications.
        :type community_id: int
        """

        self._community_id = community_id

    @property
    def comment_id(self) -> int:
        """Gets the comment_id of this Notifications.


        :return: The comment_id of this Notifications.
        :rtype: int
        """
        return self._comment_id

    @comment_id.setter
    def comment_id(self, comment_id: int):
        """Sets the comment_id of this Notifications.


        :param comment_id: The comment_id of this Notifications.
        :type comment_id: int
        """

        self._comment_id = comment_id

    @property
    def message_id(self) -> int:
        """Gets the message_id of this Notifications.


        :return: The message_id of this Notifications.
        :rtype: int
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id: int):
        """Sets the message_id of this Notifications.


        :param message_id: The message_id of this Notifications.
        :type message_id: int
        """

        self._message_id = message_id
